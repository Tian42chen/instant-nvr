task: "monocular"
gpus: [0]

zju_human: ""

train_dataset_module: "lib.datasets.h36m.tpose_dataset"
val_dataset_module: "lib.datasets.h36m.tpose_dataset"
test_dataset_module: "lib.datasets.h36m.tpose_dataset"
prune_dataset_module: "lib.datasets.h36m.tpose_dataset"

network_module: "lib.networks.bw_deform.inb_part_network_multiassign"
renderer_module: "lib.networks.renderer.inb_renderer"

renderer_vis_module: "lib.networks.renderer.inb_renderer"
trainer_module: "lib.train.trainers.inb_trainer"
evaluator_module: "lib.evaluators.if_nerf"
visualizer_module: "lib.visualizers.if_nerf"

network:
  occ:
    d_hidden: 64
    n_layers: 1
  color:
    d_hidden: 64
    n_layers: 2

viewdir_embedder:
  module: "lib.networks.embedders.freq_embedder"
  kwargs:
    res: 4
    input_dims: 3

# training options
train_th: 0.1
norm_th: 0.1

# rendering options
i_embed: 0
xyz_res: 10
view_res: 4
raw_noise_std: 0

N_samples: 64
N_importance: 128
N_rand: 1024

perturb: 1
white_bkgd: False

render_views: 4

# data options
ratio: 0.5

# partnet config
tpose_deformer:
  module: "lib.networks.deformers.uv_deformer"
  embedder:
    module: "lib.networks.embedders.part_base_embedder"
    kwargs:
      n_levels: 8
      n_features_per_level: 2
      log2_hashmap_size: 14
      base_resolution: 4
      b: 1.38
      sum: False
      sum_over_features: True
      separate_dense: True
      use_batch_bounds: False
      include_input: True

partnet:
  body:
    module: "lib.networks.bw_deform.part_base_network"
    embedder:
      module: "lib.networks.embedders.part_base_embedder"
      kwargs:
        n_levels: 16
        n_features_per_level: 16
        log2_hashmap_size: 20
        base_resolution: 16
        b: 1.38
        sum: True
        sum_over_features: True
        separate_dense: True
        use_batch_bounds: True
    bbox: [[-1, -1.2, -0.34], [0.8, 0.7, 0.5]]
    # pretrained: 'exps/inb/inb_377_body1/trained_model/body.pth'
  leg:
    module: "lib.networks.bw_deform.part_base_network"
    embedder:
      module: "lib.networks.embedders.part_base_embedder"
      kwargs:
        n_levels: 16
        n_features_per_level: 16
        log2_hashmap_size: 20
        base_resolution: 2
        b: 1.38
        sum: True
        sum_over_features: True
        separate_dense: True
        use_batch_bounds: True
    color_network:
      module: "lib.networks.bw_deform.part_base_network"
      kwargs:
        d_hidden: 64
        n_layers: 1
    bbox: [[-1, -1.2, -0.34], [0.8, -0.3, 0.5]]
  head:
    module: "lib.networks.bw_deform.part_base_network"
    embedder:
      module: "lib.networks.embedders.part_base_embedder"
      kwargs:
        n_levels: 16
        n_features_per_level: 16
        log2_hashmap_size: 18
        base_resolution: 2
        b: 1.38
        sum: True
        sum_over_features: True
        separate_dense: True
        use_batch_bounds: True
    bbox: [[-0.3, 0.3, -0.3], [0.3, 0.7, 0.3]]
  larm:
    module: "lib.networks.bw_deform.part_base_network"
    embedder:
      module: "lib.networks.embedders.part_base_embedder"
      kwargs:
        n_levels: 16
        n_features_per_level: 16
        log2_hashmap_size: 15
        base_resolution: 2
        b: 1.38
        sum: True
        sum_over_features: True
        separate_dense: True
        use_batch_bounds: True
    color_network:
      module: "lib.networks.bw_deform.part_base_network"
      kwargs:
        d_hidden: 64
        n_layers: 1
    bbox: [[0.2, 0, -0.2], [0.9, 0.35, 0.2]]
  rarm:
    module: "lib.networks.bw_deform.part_base_network"
    embedder:
      module: "lib.networks.embedders.part_base_embedder"
      kwargs:
        n_levels: 16
        n_features_per_level: 16
        log2_hashmap_size: 15
        base_resolution: 2
        b: 1.38
        sum: True
        sum_over_features: True
        separate_dense: True
        use_batch_bounds: True
    color_network:
      module: "lib.networks.bw_deform.part_base_network"
      kwargs:
        d_hidden: 64
        n_layers: 1
    bbox: [[-0.9, 0, -0.2], [-0.2, 0.35, 0.2]]

rgb_resd_loss_coe: 0.01

train:
  batch_size: 1
  collator: ""
  lr: 5e-4
  eps: 1e-15
  weight_decay: 0
  epoch: 6
  scheduler:
    type: "exponential"
    gamma: 0.1
    decay_epochs: 1000
  num_workers: 16

test:
  sampler: "FrameSampler"
  batch_size: 1
  frame_sampler_interval: 4
  collator: ""

val:
  frame_sampler_interval: 4

eval_ep: 10
save_latest_ep: 5
save_ep: 400
ep_iter: 500
vis_ep: 100

use_lpips: True
use_time_embedder: True
use_reg_distortion: True

training_stages:
  - ratio: 0.3
    _start: 0
  - ratio: 0.5
    sample_focus: head
    _start: 2
  - ratio: 0.5
    sample_focus: ""
    reg_dist_weight: 1.0
    _start: 4

smpl: smpl
lbs: smpl_lbs
params: smpl_params
vertices: smpl_vertices

part_deform: False
patch_size: 64

log_interval: 100

train_dataset:
  data_root: "data/default"
  human: ""
  ann_file: "data/default/annots.npy"
  split: "train"

val_dataset:
  data_root: "data/default"
  human: ""
  ann_file: "data/default/annots.npy"
  split: "val"

test_dataset:
  data_root: "data/default"
  human: ""
  ann_file: "data/default/annots.npy"
  split: "test"

bullet:
  dataset_module: "lib.datasets.h36m.tpose_novel_view_dataset"
  dataset_kwargs:
    data_root: "data/default"
    ann_file: "data/default/annots.npy"
    human: ""
    split: "test"
  visualizer_module: "lib.visualizers.if_nerf_demo"

tmesh:
    dataset_module: 'lib.datasets.h36m.tpose_dataset_mesh'
    dataset_kwargs:
        data_root: 'data/default'
        human: ''
        ann_file: 'data/default/annots.npy'
        split: 'tmesh'
    renderer_module: 'lib.networks.renderer.pose_mesh_renderer'

# data options
training_view: [0]
test_view: [0]
begin_ith_frame: 0
num_train_frame: 200
frame_interval: 1

smpl_thresh: 0.05
exp_name: default
pair_loss_weight: 10.0

eval_ratio: 0.5
silent: False
